/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client_server_chat_app;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Rashda Khanzada
 */
public class chat_Client extends javax.swing.JFrame {

    /**
     * Creates new form chat_Client
     */
    static Socket s;
    static DataInputStream din;
    static DataOutputStream dout;
    public chat_Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        msg_text = new javax.swing.JTextField();
        msg_send = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("\"CLIENT\"");
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jPanel1.setLayout(null);

        msg_area.setEditable(false);
        msg_area.setColumns(20);
        msg_area.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        msg_area.setRows(5);
        jScrollPane1.setViewportView(msg_area);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 20, 500, 350);

        msg_text.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        msg_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_textActionPerformed(evt);
            }
        });
        jPanel1.add(msg_text);
        msg_text.setBounds(20, 390, 450, 40);

        msg_send.setBackground(new java.awt.Color(0, 153, 153));
        msg_send.setForeground(new java.awt.Color(0, 153, 153));
        msg_send.setIcon(new javax.swing.ImageIcon(getClass().getResource("/602.9-send-message-icon-iconbunny.jpg"))); // NOI18N
        msg_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msg_sendActionPerformed(evt);
            }
        });
        jPanel1.add(msg_send);
        msg_send.setBounds(480, 390, 40, 40);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 560, 480);

        setSize(new java.awt.Dimension(559, 506));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void msg_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_sendActionPerformed
        try {
            String msgout="";
            msgout=msg_text.getText().trim();     
            msg_area.setText(msg_area.getText().trim()+"\n Client :\t"+msgout);
            dout.writeUTF(msgout);
            msg_text.setText("");
        } catch (IOException ex) {
            Logger.getLogger(chat_Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_msg_sendActionPerformed

    private void msg_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msg_textActionPerformed
        try {
            String msgout="";
            msgout=msg_text.getText().trim();
            msg_area.setText(msg_area.getText().trim()+"\n Client :\t"+msgout);
            dout.writeUTF(msgout);
            msg_text.setText("");
        } catch (IOException ex) {
            Logger.getLogger(chat_Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_msg_textActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chat_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chat_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chat_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chat_Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new chat_Client().setVisible(true);
            }
        });
        
        try{
          s=new Socket("127.0.0.1",1201);//here the ip address is local address bcz of running the client and server at the same computer
          din=new DataInputStream(s.getInputStream());
          dout=new DataOutputStream(s.getOutputStream());
          
          String msgin="";
          while(!msgin.equals("exit")){
             msgin=din.readUTF();
             msg_area.setText(msg_area.getText().trim()+"\n Server :\t"+msgin);
          }
        }
        catch(Exception e){
            System.out.println(e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JButton msg_send;
    private javax.swing.JTextField msg_text;
    // End of variables declaration//GEN-END:variables
}
