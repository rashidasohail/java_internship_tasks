/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package media_player_java_application;

import java.awt.Color;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;


/**
 *
 * @author Rashda Khanzada
 */
public class media_player extends javax.swing.JFrame {

    /**
     * Creates new form media_player
     */
       ArrayList updateList = new ArrayList();
       Playlist playlist = new Playlist();
       Player player;
       File myFile;
       FileInputStream fis;
       BufferedInputStream bis;
    public media_player() {
        initComponents();
    }
    
    //update the list (add or delete the song)
    void updateList() {
        updateList = playlist.getListSong();
        DefaultListModel model =  new DefaultListModel();
        for (int i = 0; i < updateList.size(); i++) {
            int j = i + 1;
            model.add(i, j + " | " + ((File) updateList.get(i)).getName());
        }
        jPlaylist.setModel(model);

    }
    //add song to the list
    void add() throws IOException{
        playlist.add(this);
        updateList(); 
    }
    //delete song from the list   
    void delete(){
        try{
           int delete = jPlaylist.getLeadSelectionIndex();
           playlist.list.remove(delete);
           updateList();
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null,e);
        }
    }
    
    void open(){
       playlist.openPls(this);
       updateList();
   }
    
    //save the song in the playlist
    void save(){
        playlist.saveAsPlaylist(this);
        updateList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pause_button = new javax.swing.JButton();
        add_button = new javax.swing.JButton();
        playbutton = new javax.swing.JButton();
        reversesong_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPlaylist = new javax.swing.JList<>();
        resume_button = new javax.swing.JButton();
        forwardsong_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("\"MEDIA PLAYER\"");
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        pause_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media_player_java_application/pausebutn.jpg"))); // NOI18N
        pause_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pause_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(pause_button);
        pause_button.setBounds(120, 60, 50, 50);

        add_button.setBackground(new java.awt.Color(255, 255, 255));
        add_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p_add.png"))); // NOI18N
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(add_button);
        add_button.setBounds(20, 10, 59, 41);

        playbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media_player_java_application/playicon.jpg"))); // NOI18N
        playbutton.setText("play");
        playbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(playbutton);
        playbutton.setBounds(100, 120, 80, 80);

        reversesong_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media_player_java_application/backwardbutton.jpg"))); // NOI18N
        reversesong_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reversesong_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(reversesong_button);
        reversesong_button.setBounds(39, 141, 50, 50);

        jPlaylist.setBackground(new java.awt.Color(255, 153, 0));
        jPlaylist.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jPlaylist.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jPlaylist);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(300, 10, 170, 290);

        resume_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media_player_java_application/resumebutn.jpg"))); // NOI18N
        resume_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resume_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(resume_button);
        resume_button.setBounds(119, 210, 50, 50);

        forwardsong_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media_player_java_application/forwardicon.jpg"))); // NOI18N
        forwardsong_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardsong_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(forwardsong_button);
        forwardsong_button.setBounds(190, 140, 50, 50);

        delete_button.setBackground(new java.awt.Color(255, 255, 255));
        delete_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/p_remove.png"))); // NOI18N
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttonActionPerformed(evt);
            }
        });
        jPanel1.add(delete_button);
        delete_button.setBounds(220, 260, 59, 41);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 500, 320);

        setSize(new java.awt.Dimension(503, 357));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    private void playbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playbuttonActionPerformed
        playsong(); 
        
       
    }//GEN-LAST:event_playbuttonActionPerformed

    private void forwardsong_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardsong_buttonActionPerformed
        next();
    }//GEN-LAST:event_forwardsong_buttonActionPerformed

    private void reversesong_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reversesong_buttonActionPerformed
       previous();
    }//GEN-LAST:event_reversesong_buttonActionPerformed
    
    private void pause_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pause_buttonActionPerformed
       pause();
       playbutton.setBackground(Color.GRAY);
    }//GEN-LAST:event_pause_buttonActionPerformed
    
    private void resume_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resume_buttonActionPerformed
      resume();
      playbutton.setBackground(Color.GREEN);
    }//GEN-LAST:event_resume_buttonActionPerformed

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
          try {
              add();
          } catch (IOException ex) {
              Logger.getLogger(media_player.class.getName()).log(Level.SEVERE, null, ex);
          }
    }//GEN-LAST:event_add_buttonActionPerformed

    private void delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttonActionPerformed
        delete();
    }//GEN-LAST:event_delete_buttonActionPerformed
            
    File play1;
    static int a = 0;
    long total_length;
    
    //play selected song from the playlist
    
    void playsong(){
     if(a==0){
        try{
            int play = jPlaylist.getSelectedIndex();
            play1 = (File) this.updateList.get(play);
            fis = new FileInputStream(play1);
            bis = new BufferedInputStream(fis);
            total_length=fis.available();
            player = new Player(bis);        
            a =1;
            playbutton.setBackground(Color.GREEN);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }   
        new Thread(){
            @Override
            public void run(){
                try{
                    player.play();
                }
                
                catch (Exception e){
                       JOptionPane.showMessageDialog(null, e);
                }
            }
        }.start();
        
    }
     else{
        player.close();    
        a=0;
        playsong();
     }
   }
    
   //play next song from the list
    
   File play;
   void next(){
    if(a==0){
        try{
            int next_song = jPlaylist.getSelectedIndex() +1;
            play = (File) this.playlist.list.get(next_song);
            FileInputStream fis = new FileInputStream(play);
            BufferedInputStream bis = new BufferedInputStream(fis);
            player = new Player(bis);
            a =1;
            jPlaylist.setSelectedIndex(next_song);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        new Thread(){
            @Override
            public void run(){
                try{
                    player.play();        
                }
                catch (Exception e){
                     JOptionPane.showMessageDialog(null, e);
                }
            }
        }.start();
    }
    else{
        player.close();
        a=0;
        next();
    }

}
   //play previous song from the list
   
   void previous(){
    if(a==0){
        try{
            int prev_song = jPlaylist.getSelectedIndex() -1;
            play = (File) this.playlist.list.get(prev_song);
            FileInputStream fis = new FileInputStream(play);
            BufferedInputStream bis = new BufferedInputStream(fis);
            player = new Player(bis);
            a =1;
            jPlaylist.setSelectedIndex(prev_song);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        new Thread(){
            @Override
            public void run(){
                try{
                    player.play();   
                }
                catch (Exception e){
                    JOptionPane.showMessageDialog(null, e);
                }
            }
        }.start();      
    }
    else{
        player.close();
        a=0;
        previous();
    }
}
   
   //pause the playing song
   
   long pouse;
   void pause(){
      if(player!=null){
         try{
          pouse=fis.available();
          player.close();
         }  catch (IOException ex) { 
                Logger.getLogger(media_player.class.getName()).log(Level.SEVERE, null, ex);
            }
         playbutton.setBackground(Color.GRAY);
        }   
   }
   
  //resume the song
   
   void resume(){
    try{
        fis = new FileInputStream(play1);
            bis = new BufferedInputStream(fis);
            total_length=fis.available();
            player = new Player(bis);         
            a =1;
            fis.skip(total_length-pouse);
            playbutton.setBackground(Color.GREEN);
            new Thread(){
                public void run(){
                 try{
                   player.play();
                   
                 } catch (JavaLayerException ex) {
                       Logger.getLogger(media_player.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }        
           }.start();
           } catch (FileNotFoundException ex) { 
              Logger.getLogger(media_player.class.getName()).log(Level.SEVERE, null, ex);
          } catch (IOException ex) {
              Logger.getLogger(media_player.class.getName()).log(Level.SEVERE, null, ex);
          } catch (JavaLayerException ex) {
              Logger.getLogger(media_player.class.getName()).log(Level.SEVERE, null, ex);
          } 
   }




    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(media_player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(media_player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(media_player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(media_player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new media_player().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_button;
    private javax.swing.JButton delete_button;
    private javax.swing.JButton forwardsong_button;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JList<String> jPlaylist;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pause_button;
    private javax.swing.JButton playbutton;
    private javax.swing.JButton resume_button;
    private javax.swing.JButton reversesong_button;
    // End of variables declaration//GEN-END:variables
}
